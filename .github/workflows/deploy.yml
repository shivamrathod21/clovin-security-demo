name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-west-2
  TF_IN_AUTOMATION: true
  TF_INPUT: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Debug Secrets
      run: |
        echo "Checking if secrets are available..."
        if [ -n "${{ secrets.DB_PASSWORD }}" ]; then echo "DB_PASSWORD is set"; else echo "DB_PASSWORD is not set!"; fi
        if [ -n "${{ secrets.DOCKER_HUB_USERNAME }}" ]; then echo "DOCKER_HUB_USERNAME is set"; else echo "DOCKER_HUB_USERNAME is not set!"; fi

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: |
        terraform plan \
        -var="docker_username=${{ secrets.DOCKER_HUB_USERNAME }}" \
        -var="db_password=${{ secrets.DB_PASSWORD }}" \
        -input=false \
        -no-color

    - name: Terraform Apply
      run: |
        terraform apply \
        -var="docker_username=${{ secrets.DOCKER_HUB_USERNAME }}" \
        -var="db_password=${{ secrets.DB_PASSWORD }}" \
        -input=false \
        -no-color \
        -auto-approve

    - name: Get RDS Endpoint
      id: rds
      run: |
        echo "RDS_ENDPOINT=$(terraform output -raw db_endpoint)" >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/clovin-security:latest
      env:
        DATABASE_URL: mysql://admin:${{ secrets.DB_PASSWORD }}@${{ env.RDS_ENDPOINT }}/vulnerabilities
